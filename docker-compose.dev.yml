# Docker Compose pour le d√©veloppement local
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fleetmanager_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: fleetmanager_dev
      POSTGRES_USER: fleetmanager
      POSTGRES_PASSWORD: DevPassword123!
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d:ro
    networks:
      - fleetmanager_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fleetmanager -d fleetmanager_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fleetmanager_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fleetmanager.local
      PGADMIN_DEFAULT_PASSWORD: AdminPassword123!
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    networks:
      - fleetmanager_network
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    container_name: fleetmanager_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fleetmanager_network
    command: redis-server --appendonly yes --requirepass "RedisPassword123!"

volumes:
  postgres_data:
    name: fleetmanager_postgres_data
  pgadmin_data:
    name: fleetmanager_pgadmin_data
  redis_data:
    name: fleetmanager_redis_data

networks:
  fleetmanager_network:
    name: fleetmanager_network
    driver: bridge
