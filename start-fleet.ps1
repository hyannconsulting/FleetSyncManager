# Script PowerShell pour lancer FleetSyncManager API et Web
Write-Host "üöÄ D√©marrage de FleetSyncManager" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Green

$rootPath = $PSScriptRoot
$apiPath = Join-Path $rootPath "src\Laroche.FleetManager.API"
$webPath = Join-Path $rootPath "src\Laroche.FleetManager.Web"

# V√©rification des chemins
if (-not (Test-Path $apiPath)) {
    Write-Host "‚ùå Chemin API non trouv√©: $apiPath" -ForegroundColor Red
    exit 1
}

if (-not (Test-Path $webPath)) {
    Write-Host "‚ùå Chemin Web non trouv√©: $webPath" -ForegroundColor Red
    exit 1
}

Write-Host "üìÅ API Path: $apiPath" -ForegroundColor Cyan
Write-Host "üìÅ Web Path: $webPath" -ForegroundColor Cyan

# Fonction pour d√©marrer un processus en arri√®re-plan
function Start-BackgroundProcess {
    param(
        [string]$Title,
        [string]$WorkingDirectory,
        [string]$Command,
        [string]$Arguments
    )
    
    Write-Host "üîÑ D√©marrage de $Title..." -ForegroundColor Yellow
    
    $psi = New-Object System.Diagnostics.ProcessStartInfo
    $psi.FileName = $Command
    $psi.Arguments = $Arguments
    $psi.WorkingDirectory = $WorkingDirectory
    $psi.UseShellExecute = $true
    $psi.CreateNoWindow = $false
    $psi.WindowStyle = "Normal"
    
    $process = [System.Diagnostics.Process]::Start($psi)
    return $process
}

try {
    Write-Host ""
    Write-Host "üåê Lancement de l'API (Port 7002)..." -ForegroundColor Magenta
    $apiProcess = Start-BackgroundProcess -Title "FleetSyncManager API" -WorkingDirectory $apiPath -Command "dotnet" -Arguments "run --urls https://localhost:7002"
    
    Start-Sleep -Seconds 3
    
    Write-Host "üé® Lancement de l'interface Web (Port 7001)..." -ForegroundColor Magenta  
    $webProcess = Start-BackgroundProcess -Title "FleetSyncManager Web" -WorkingDirectory $webPath -Command "dotnet" -Arguments "run --urls https://localhost:7001"
    
    Write-Host ""
    Write-Host "‚úÖ Applications lanc√©es avec succ√®s!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üåç URLs d'acc√®s:" -ForegroundColor White
    Write-Host "   üì° API: https://localhost:7002" -ForegroundColor Cyan
    Write-Host "   üì° API Docs: https://localhost:7002/swagger" -ForegroundColor Cyan
    Write-Host "   üé® Web: https://localhost:7001" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "üí° Conseils:" -ForegroundColor White
    Write-Host "   - L'API doit √™tre accessible avant d'utiliser le Web" -ForegroundColor Gray
    Write-Host "   - V√©rifiez les logs en cas de probl√®me" -ForegroundColor Gray
    Write-Host "   - Utilisez Ctrl+C pour arr√™ter chaque processus" -ForegroundColor Gray
    Write-Host ""
    Write-Host "‚è≥ Attente du d√©marrage complet... (15 secondes)" -ForegroundColor Yellow
    
    Start-Sleep -Seconds 15
    
    # Tentative d'ouverture du navigateur
    Write-Host "üåê Ouverture du navigateur..." -ForegroundColor Green
    Start-Process "https://localhost:7001"
    
    Write-Host ""
    Write-Host "‚ú® FleetSyncManager est maintenant accessible!" -ForegroundColor Green
    Write-Host "Appuyez sur une touche pour fermer ce script (les applications continuent de fonctionner)..."
    
    $null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
    
    Write-Host ""
    Write-Host "üëã Script ferm√©. Les applications continuent de fonctionner en arri√®re-plan." -ForegroundColor Cyan
}
catch {
    Write-Host ""
    Write-Host "‚ùå Erreur lors du d√©marrage: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "V√©rifiez les pr√©requis et les ports disponibles." -ForegroundColor Yellow
}
